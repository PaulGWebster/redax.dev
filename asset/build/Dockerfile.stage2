FROM perlbase:stage1 AS stage2

# Copy our helper scripts across
COPY src/install /asset

# Sart with known missing, then follow LFS order
# Supporting languages - Replace system base in some cases

# Bison
COPY src/bison-* /asset
RUN ./build-standard.sh bison

# Python
COPY src/Python* /asset
RUN ./build-standard.sh Python

# M4
COPY src/m4-* /asset
RUN ./build-standard.sh m4

# Ncurses
COPY src/ncurses-* /asset
RUN ./build-special.sh ncurses ncurses

# Bash
COPY src/bash* /asset
RUN PREFIX="/"                                      \
    CARGS="                                         \
        --enable-process-substitution               \
        --enable-function-import                    \
        --enable-net-redirections                   \
        --enable-directory-stack                    \
        --enable-command-timing                     \
        --enable-alias                              \
        --without-bash-malloc                       \
    " ./build-standard.sh bash                      \
    && ln -sf /bin/bash /bin/sh                     \
    && echo "/bin/sh" > /etc/shells                 \
    && echo "/bin/bash" >> /etc/shells

# Coreutils
COPY src/coreutils-* /asset
RUN PREFIX="/"                                      \
    CARGS="                                         \
        --enable-install-program=hostname           \
        --enable-no-install-program=uname           \
    "                                               \
    FORCE_UNSAFE_CONFIGURE=1 ./build-standard.sh coreutils

# Diffutils
COPY src/diffutils-* /asset
RUN ./build-standard.sh diffutils

# Gave up on 'file'

# Find etc
COPY src/findutils-* /asset
RUN CARGS="--localstatedir=/var/lib/locate" ./build-standard.sh findutils

# Gawk
COPY src/gawk* /asset
RUN ./build-standard.sh gawk

# Grep
COPY src/grep-* /asset
RUN PREFIX="/" ./build-standard.sh grep

# Gzip
COPY src/gzip-* /asset
RUN ./build-standard.sh gzip

# Install make
COPY src/make* /asset
RUN ./build-standard.sh make

# Install patch
COPY src/patch* /asset
RUN ./build-standard.sh patch

# Install sed
COPY src/sed* /asset
RUN ./build-standard.sh sed

# Tar
COPY src/tar* /asset
RUN PREFIX="/" ./build-special.sh tar tar

# XZ
COPY src/xz-* /asset
RUN CARGS="--disable-static" ./build-standard.sh xz

# Gettext
COPY src/gettext* /asset
RUN ./build-standard.sh gettext

# Texinfo
COPY src/texinfo* /asset
RUN ./build-standard.sh texinfo

# Util-linux - need pkg-config
# COPY src/util-linux* /asset
# RUN tar -xf util-linux* && rm util-linux*.tar.* && cd util-linux* \
#     && ./autogen.sh                         \
#     && ./configure                          \
#         --prefix=/usr                       \
#         --libdir=/usr/lib                   \
#         --docdir=/usr/share/doc/util-linux  \
#         runstatedir=/run                    \
#     && make -j4                             \
#     && make strip-install                   \
#     && cd ..                                \
#     && rm -Rf util-linux*

RUN rm -rf /usr/share/{info,man,doc}/*