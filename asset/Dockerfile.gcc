FROM perlbase:stage0 AS stage1

COPY src /asset

WORKDIR /asset

RUN apt remove              \ 
    perl                    \
    python3                 \
    debian-archive-keyring  \
    apt                     \
    x11-common              \
    media-types             \
    mariadb-common          \
    autotools-dev           \
    -y                      \
    --allow-remove-essential

FROM stage1 AS stage2

# Start with the major backers
RUN mkdir -p bison-src                                  \
    && tar -xzf bison*.tar.gz -C bison-src/             \
    && cd bison-src/bison*                              \
    && ./configure                                      \
    && make -j4                                         \
    && make install

RUN mkdir -p tcl-src                                    \
    && tar -xzf tcl*.tar.gz -C tcl-src/                 \
    && cd tcl-src/tcl*/unix                             \
    && ./configure                                      \
    && make -j4                                         \
    && make install

# Singularize our shells to bash
RUN mkdir -p bash-src                                   \
    && tar -xzf bash*.tar.gz -C bash-src/               \
    && cd bash-src/bash*                                \
    && ./configure                                      \
    && make -j4                                         \
    && make install

# Should really deploy a script to check what is in /etc/shells and go nuke them
# that way

RUN rm /bin/sh                                          \
    && ln -s /bin/bash /bin/sh                          \
    && rm /bin/dash                                     \
    && echo "/bin/sh" > /etc/shells                     \
    && echo "/bin/bash" >> /etc/shells

# Reinstall autoconf and automake

RUN mkdir -p autoconf-src                               \
    && tar -xzf autoconf*.tar.gz -C autoconf-src/       \
    && cd autoconf-src/autoconf*                        \
    && ./configure                                      \
    && make -j4                                         \
    && make install

RUN mkdir -p texinfo-src                                \
    && tar -xf texinfo-*.tar.gz -C texinfo-src/         \
    && cd texinfo-src/texinfo*                          \
    && ./configure                                      \
    && make -j4                                         \
    && make install

RUN mkdir -p groff-src                                  \
    && tar -xf groff-*.tar.gz -C groff-src/             \
    && cd groff-src/groff*                              \
    && ./configure                                      \
    && make -j4                                         \
    && make install

RUN mkdir -p make-src                                   \
    && tar -xf make-*.tar.gz -C make-src/               \
    && cd make-src/make*                                \
    && ./configure                                      \
    && make -j4                                         \
    && make install


RUN mkdir -p ldap-src                                   \
    && tar -xf openldap*.tgz -C ldap-src/               \
    && cd ldap-src/open*                                \
    && ./configure                                      \
    && make -j4                                         \
    && make install

# Cmake
RUN mkdir -p cmake-src                                  \
    && tar -xzf cmake*.tar.gz -C cmake-src/             \
    && cd cmake-src/cmake*                              \
    && ./configure                                      \
    && make -j4                                         \
    && make install

# Here be liblzo and other friends

RUN mkdir -p libidn-src                                 \
    && tar -xzf libidn*.tar.gz -C libidn-src/           \
    && cd libidn-src/libidn*                            \
    && ./configure                                      \
    && make -j4                                         \
    && make install

RUN mkdir -p zlib-src                                   \
    && tar -xzf zlib*.tar.gz -C zlib-src/               \
    && cd zlib-src/zlib*                                \
    && ./configure                                      \
    && make -j4                                         \
    && make install


# And then perl

RUN mkdir -p perl-src                                   \
    && tar -xzf perl*.tar.gz -C perl-src/               \
    && cd perl-src/perl*                                \
    && sh Configure -de                                 \
    && make -j4                                         \
    && make install

# Next is OpenSSL as it requires perl to be built

RUN mkdir -p openssl-src                                \
    && tar -xzf openssl*.tar.gz -C openssl-src          \
    && cd openssl-src/openssl*                          \
    && ./config                                         \
    && make -j4                                         \
    && make install

# And some important perl tools

RUN mkdir -p App-cpanminus                              \
    && tar -xzf App-cpanminus*.tar.gz -C App-cpanminus  \
    && cd App-cpanminus/App-cpanminus*                  \
    && perl Makefile.PL                                 \
    && make                                             \
    && make install

# We also now have a full ssl and gcc stack so lets get libwww-perl working

RUN mkdir -p libwww-perl-src                            \
    && tar -xzf libwww-perl*.tar.gz -C libwww-perl-src  \
    && cd libwww-perl-src/lib*                          \
    && perl Makefile.PL                                 \
    && make                                             \
    && make install

FROM stage2 AS stage3

# Why is this here again? I think its an sqlite requirement
RUN mkdir -p lemon-src                                  \
    && tar -xzf lemon*.tar.gz -C lemon-src/             \
    && cd lemon-src/lemon*                              \
    && mkdir build                                      \
    && cd build                                         \
    && cmake ..                                         \
    && make                                             \
    && make install

# Postgresql
RUN mkdir -p postgresql-src                             \
    && tar -xzf postgresql*.tar.gz -C postgresql-src/   \
    && cd postgresql-src/postgresql*                    \
    && ./configure                                      \
    && make -j4                                         \
    && make install

# MariaDB
RUN mkdir -p mariadb-src                                \
    && tar -xzf mariadb*.tar.gz -C mariadb-src/         \
    && cd mariadb-src/mariadb*                          \
    && cmake .                                          \
    && make install

# SQLite
RUN mkdir -p sqlite-src                                 \
    && tar -xzf sqlite*.tar.gz -C sqlite-src/           \
    && cd sqlite-src/sqlite*                            \
    && ./configure                                      \
    && make -j4                                         \
    && make install

# Redis
RUN mkdir -p redis-src                                  \
    && tar -xzf redis*.tar.gz -C redis-src/             \
    && cd redis-src/redis*                              \
    && make -j4 BUILD_TLS=yes                           \
    && make install

FROM scratch AS stage4

COPY --from=stage3 / /

RUN rm -Rf                                              \
    /var/cache/apt                                      \
    /usr/bin/dpkg                                       \
    /usr/lib/dpkg                                       \
    /etc/dpkg                                           \
    /usr/share/dpkg                                     \
    /usr/share/man/man1/dpkg.1.gz                       \
    /asset